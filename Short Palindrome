import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'shortPalindrome' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int shortPalindrome(String s) {
    // Write your code here
    final int mod = 1000*1000*1000 + 7;
    int[] arr1 = new int[26];
    int[][] arr2 = new int[26][26];
    int[] arr3 = new int[26];
    int ans = 0;
    int index;
    for(int i=0;i<s.length();i++){
        index = s.charAt(i)-'a';
        ans+=(arr3[index]);
        ans %= mod;
        for(int j=0;j<26;j++){
            arr3[j] +=(arr2[j][index]);
            arr3[j]%=mod;   
        }
        for(int j=0;j<26;j++){
            arr2[j][index]+=(arr1[j]%mod);
            arr2[j][index]%=mod;
        }
        arr1[index]++;
        arr1[index]%=mod;
    }
    return ans;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        int result = Result.shortPalindrome(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
